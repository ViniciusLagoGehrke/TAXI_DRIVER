{"ast":null,"code":"var _jsxFileName = \"/home/runner/TaxiDriver/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nfunction HomePage() {\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Taxi Sharing\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"please enter your details\"), __jsx(Formik, {\n    initialValues: {\n      email: '',\n      name: '',\n      address: '',\n      endOfShift: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Field, {\n    type: \"email\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    name: \"email\",\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(Field, {\n    type: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    name: \"password\",\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Submit\"))));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/home/runner/TaxiDriver/pages/index.js"],"names":["Formik","Form","Field","ErrorMessage","HomePage","email","name","address","endOfShift","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;;AAEA,SAASC,QAAT,GAAoB;AAClB,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,EAGE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,IAAI,EAAE,EAFO;AAGbC,MAAAA,OAAO,EAAE,EAHI;AAIbC,MAAAA,UAAU,EAAE;AAJC,KADjB;AAOE,IAAA,QAAQ,EAAEC,MAAM,IAAI;AAClB,YAAMC,MAAM,GAAG,EAAf;;AACA,UAAI,CAACD,MAAM,CAACJ,KAAZ,EAAmB;AACjBK,QAAAA,MAAM,CAACL,KAAP,GAAe,UAAf;AACD,OAFD,MAEO,IACL,CAAC,2CAA2CM,IAA3C,CAAgDF,MAAM,CAACJ,KAAvD,CADI,EAEL;AACAK,QAAAA,MAAM,CAACL,KAAP,GAAe,uBAAf;AACD;;AACD,aAAOK,MAAP;AACD,KAjBH;AAkBE,IAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEG,MAAAA;AAAF,KAAT,KAA+B;AACvCC,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAG,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAHS,EAGP,GAHO,CAAV;AAID,KAvBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAyBG,CAAC;AAAEK,IAAAA;AAAF,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CA1BJ,CAHF,CADF;AA2CD;;AAED,eAAeb,QAAf","sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik'\n\nfunction HomePage() {\n  return (\n    <>\n      <h1>Taxi Sharing</h1>\n      <p>please enter your details</p>\n      <Formik\n        initialValues={{\n          email: '',\n          name: '',\n          address: '',\n          endOfShift: ''\n        }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"div\" />\n            <Field type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component=\"div\" />\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  )\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}